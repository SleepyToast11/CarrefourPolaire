// <auto-generated />
using System;
using CarrefourPolaire.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarrefourPolaire.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20251002030658_users")]
    partial class users
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarrefourPolaire.Models.Allergy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("CarrefourPolaire.Models.EmailLoginToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Used")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("EmailLoginTokens");
                });

            modelBuilder.Entity("CarrefourPolaire.Models.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RegistrationGroupId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationGroupId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("CarrefourPolaire.Models.RegistrationGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ShareUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("RegistrationGroups");
                });

            modelBuilder.Entity("ParticipantAllergy", b =>
                {
                    b.Property<Guid>("ParticipantId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AllergyId")
                        .HasColumnType("uuid");

                    b.HasKey("ParticipantId", "AllergyId");

                    b.HasIndex("AllergyId");

                    b.ToTable("ParticipantAllergy");
                });

            modelBuilder.Entity("CarrefourPolaire.Models.Participant", b =>
                {
                    b.HasOne("CarrefourPolaire.Models.RegistrationGroup", "RegistrationGroup")
                        .WithMany("Participants")
                        .HasForeignKey("RegistrationGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistrationGroup");
                });

            modelBuilder.Entity("ParticipantAllergy", b =>
                {
                    b.HasOne("CarrefourPolaire.Models.Allergy", null)
                        .WithMany()
                        .HasForeignKey("AllergyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarrefourPolaire.Models.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarrefourPolaire.Models.RegistrationGroup", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
